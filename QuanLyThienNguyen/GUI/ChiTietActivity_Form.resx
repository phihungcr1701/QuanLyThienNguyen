<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="lbMoTa.Text" xml:space="preserve">
    <value>Giúp đỡ nhiều bệnh nhi với Chiến dịch gây quỹ “Cánh Diều Hi Vọng Tuổi Thơ,Hè 2024” Chiến dịch gây quỹ “Cánh Diều Hi Vọng Tuổi Thơ,Hè 2024” do Quỹ Nâng Bước Tuổi Thơ tổ chức là cơ hội để mỗi cá nhân, tổ chức và doanh nghiệp chung tay hỗ trợ các bệnh nhi có được sự chăm sóc y tế chất lượng cao kịp thời.

Nhu cầu y tế cấp thiết cho trẻ em

Theo thống kê gần nhất của cơ quan y tế, mỗi năm Việt Nam có khoảng 41.000 trẻ em bị dị tật bẩm sinh. Tỉ lệ này tương đương cứ 13 phút lại có một trẻ mắc dị tật bẩm sinh được sinh ra. Trong đó có khoảng 1.400-1.800 trẻ bị mắc bệnh Down, 1.000-1.500 trẻ bị dị tật ống thần kinh, 300-400 trẻ bị suy giáp bẩm sinh, khoảng 2.200 trẻ bị bệnh tan máu bẩm sinh… Con số này chưa bao gồm các trẻ em bị mắc tai nạn và bệnh tật do các yếu tố bên ngoài.

Chi phí y tế cho con em không may gặp các tình huống trên của các gia đình là rất lớn. Do đó, ngay từ năm 2006, Quỹ Nâng Bước Tuổi Thơ đã được sáng lập nhằm cung cấp chuyên môn điều trị bệnh lý và phẫu thuật đa khoa theo tiêu chuẩn quốc tế cho trẻ em dị tật bẩm sinh có hoàn cảnh khó khăn. Tổ chức này ra đời với sứ mệnh tạo nên sức mạnh của tình yêu thương, giúp trẻ em có hoàn cảnh khó khăn trên khắp Việt Nam vượt qua những khiếm khuyết của cơ thể thông qua điều trị y tế bài bản, có cơ hội phát triển hết tiềm năng của mình cho một cuộc sống mới tốt đẹp hơn.

Trong 18 năm hoạt động tại Việt Nam, Quỹ Nâng Bước Tuổi Thơ đã giúp hơn 800 trẻ em có hoàn cảnh khó khăn, mắc dị tật bẩm sinh và thương tật do tai nạn có thể tiếp cận điều trị tại những cơ sở y tế tốt nhất Việt Nam nhờ sự đóng góp của các doanh nghiệp, các nhà hảo tâm trong và ngoài nước. Nguồn gây quỹ được sử dụng để chu cấp trọn vẹn trong suốt quá trình điều trị, từ khi phẫu thuật cho đến khi các em hồi phục các khiếm khuyết (bao gồm cả chi phí đi lại và ăn ở cho người thân nuôi bệnh).</value>
  </data>
</root>